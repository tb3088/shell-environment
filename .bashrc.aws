which ec2-version &>/dev/null ||
  for d in /usr/local/ec2-api-tools*; do
      [ -d "$d"/bin ] && addPath "$d"/bin
  done

[ -e /etc/bash_completion.d/aws_bash_completer ] || {
    link=`which aws_bash_completer`
    [ -n "$link" ] && ln -s "$link" /etc/bash_completion.d/
    unset link
  }


function aws-profile {
  local readonly _profile=${1:?}
  local readonly _region=`aws configure get region --profile "$_profile" 2>/dev/null`

  [ -n "$_region" ] || return       #log_ERROR "invalid argument ($_profile)"

  aws-rmPath
  export AWS_PROFILE="$_profile"
  export AWS_DEFAULT_REGION="$_region"
  aws-addPath
}


function aws-addPath {
  local v delete

  for v in "$@" ${AWS_CONFIG_FILE:+`dirname "$AWS_CONFIG_FILE"`} \
        "$HOME"/.{aws,ssh}/"${AWS_PROFILE:-default}"; do
    [ -n "$v" -a -d "$v" ] || continue
    [ "$v" = '.' ] && v=`pwd`

    [ -n "$delete" ] && k='PATH' rmPath "$v"{/bin,} || k='PATH' addPath \-"$v"/bin

    [ -n "$SSH_AUTH_SOCK" ] && ssh-add ${DEBUG:- -q} ${delete:+ -d} "$v"/{id_?sa,*.pem} 2>/dev/null
    break
  done
}


function aws-rmPath {
  delete=1 aws-addPath "$@"
}


function route53-export {
  local zoneid=${1:?}

  grep -qE '([A-Z]|[0-9]){12,}' <<< "$zoneid" ||
    zoneid=$( aws route53 list-hosted-zones --output=json |
        jq -r ".HostedZones[] | select(.Name == \"$1\".) | .Id" |
        cut -d'/' -f3
    )

  for zone in $zoneid; do
    echo -e "; $zone\n"

    #TODO use printf() with width
    aws route53 list-resource-record-sets --hosted-zone-id=${zone:?} --output=json |
        jq -jr '.ResourceRecordSets[] | "\(.Name) \t\(.TTL) \t\(.Type) \t\(.ResourceRecords[].Value)\n"'
    echo -e "\n"
  done
}

# vim: set expandtab:ts=4:sw=2
