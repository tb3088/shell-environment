which ec2-version &>/dev/null ||
  for d in `\ls -d /usr/local/ec2-api-tools* 2>/dev/null`; do
      [ -z "$d" -o -h "$d" -o ! -d "$d/bin" ] && continue
      addPath "$d/bin"
  done

[ -e /etc/bash_completion.d/aws_bash_completer ] ||
    ln -s `which aws_bash_completer` /etc/bash_completion.d/

function aws-addPath {
  local v

  for v in "$@" ${AWS_CONFIG_FILE:+`dirname "$AWS_CONFIG_FILE"`} "$HOME/.aws/$AWS_PROFILE"; do
    [ ! -d "$v" ] && continue
    [ "$v" = '.' ] && v=`pwd`

    # restore saved PATH
    [ -n "$_PATH" ] && PATH="$_PATH"

    [ -d "$v/bin" ] && addPath -"$v/bin" || addPath -"$v"
    [ -n "$SSH_AUTH_SOCK" ] && ssh-add -k $v/*.pem 2>/dev/null
    break
  done
}

function route53-export {
  local zoneid=${1:?}

  grep -qE '([A-Z]|[0-9]){12,}' <<< "$zoneid" || \
      zoneid=$(aws route53 list-hosted-zones --output=json | \
        jq -r ".HostedZones[] | select(.Name == \"$1.\") | .Id" | \
        cut -d'/' -f3)

  for zone in $zoneid; do
    echo "; $zone
"
    #TODO use printf() with width
    aws route53 list-resource-record-sets --hosted-zone-id=${zone:?} --output=json | jq -jr '.ResourceRecordSets[] | "\(.Name) \t\(.TTL) \t\(.Type) \t\(.ResourceRecords[].Value)\n"'
    echo "
"
  done
}

# vim: set expandtab:ts=4:sw=2
