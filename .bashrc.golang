which go &>/dev/null || {
    _cygpath=`which cygpath 2>/dev/null`

    # look for program in common places
    for v in "$GOROOT" {"$SYSTEMDRIVE","$PROGRAMFILES","$LOCALAPPDATA"/programs,/opt,/usr/local/lib}/go{,lang}{,${GO_VERSION:+-$GO_VERSION}}; do
        [ -n "$v" ] && { [ -n "$_cygpath" ] && v="`$_cygpath --unix -- "$v"`"; } || { unset v; continue; }
        [ -x "$v/bin/go" ] && { addPath "$v/bin"; break; }
    done
    [ -n "$v" ] || return 0
    unset _cygpath
}

#https://golang.org/cmd/go/#hdr-GOPATH_environment_variable

: ${GOROOT:=`go env GOROOT`}

[ -n "$GOPATH" ] || {
    for _gop in "${LOCALAPPDATA}/go" "`go env GOPATH`"; do
        [ -n "${_gop%/go}" ] || continue
	GOPATH="`convert_path --windows $_gop`"
	break
    done
}

OLDIFS="$IFS"
IFS="${PATHSEP:-:}"
for dir in $GOPATH; do
    addPath "`convert_path --unix "$dir"`/bin"
done
IFS="$OLDIFS"

#GOBIN=$HOME/bin
export ${!GO*}

#NOTE 'go get' doesn't work if using Cygwin 'git'
# if OSTYPE=cygwin or uname -k = windows, then git version | grep windows or issue WARN
