which go &>/dev/null || { return 0

# look for Go in a few places
# for d in $GOROOT "${PROGRAMFILES:-/opt}/golang${GO_VERSION}"}
#for v in GOROOT; do
#    [ -n "${!v}" ] || { unset $v; continue; }
#    [ -d "${!v}/bin" ] && addPath "${!v}/bin"
#done
}

#https://golang.org/cmd/go/#hdr-GOPATH_environment_variable

: ${GOROOT:=`go env GOROOT`}

[ -n "$GOPATH" ] || {
    for _gop in "${LOCALAPPDATA}/go" "`go env GOPATH`"; do
        [ -n "${_gop%/go}" ] || continue
	GOPATH="`convert_path --windows $_gop`"
	break
    done
}

OLDIFS="$IFS"
IFS="${PATHSEP:-:}"
for dir in $GOPATH; do
    addPath "`convert_path --unix "$dir"`/bin"
done
IFS="$OLDIFS"

#GOBIN=$HOME/bin
export ${!GO*}

#NOTE 'go get' doesn't work if using Cygwin 'git'
# if OSTYPE=cygwin or uname -k = windows, then git version | grep windows or issue WARN
