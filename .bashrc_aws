#----- header -----
[ "${0##*/}" != "${BASH_SOURCE##*/}" ] || { >&2 echo -e "ERROR\tfile must be sourced ($0)"; return 2; }

# prevent multiple-inclusion
__link=`readlink -f "$BASH_SOURCE"`
declare -n __tag=SOURCE_${__link//[^a-zA-Z0-9_]/}
[ ${__tag:-0} = 0 ] || return 0
__tag=1
#------------------

is_exec aws${AWS_VERSION} || .bashrc_3rdparty aws

addPath /usr/local/ec2-ami-tools*/**/bin

# SSM Session-Manager
# ref: https://docs.aws.amazon.com/systems-manager/latest/userguide/session-manager-working-with-install-plugin.html
is_exec session-manager-plugin || {
    [[ "${OSTYPE:-`uname -o`}" =~ [cC]ygwin ]] &&
        addPath "$PROGRAMFILES/Amazon/SessionManagerPlugin/bin" 2>/dev/null
    # Linux installs to /usr/local/bin
  }

link=`type -p aws_{,bash_}completer | head -n 1` &&
    for bc in {/etc/,"$HOME"/.}bash_completion.d; do
      [ -e "$bc/${link##*/}" ] && break

      # skip since not 'root'
      [[ "$bc" =~ ^/etc  && `id -u` -eq 0 ]] || continue

      mkdir -p "$bc"
      ln -s "$link" "$bc"/
    done

# session credentials expire in 1h (default)
export AWS_SESSION_DURATION=$((3600 * 8))

for f in "${BASH_SOURCE/bashrc/functions}"; do
  [ -f "$f" ] || continue
  source "$f" || echo >&2 "RC=$? during $f"
done

alias aws.clearenv='aws.profile RESET'
alias aws='__AWS'
alias ec2.connect='__AWS ssm start-session --target'


# vim: expandtab:ts=8:sw=4
