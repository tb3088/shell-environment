which ec2-version &>/dev/null || {
    for d in /usr/local/ec2-api-tools*; do
      [ -d "$d/bin" ] && addPath "$d/bin"
    done
    unset d
  }

link=`which aws_bash_completer 2>/dev/null`
[ -n "$link" ] &&
    for bc in /etc "$HOME"; do
      [ -e "$bc/bash_completion.d/aws_bash_completer" ] && break
      [ "$bc" = "/etc" ] && : ${SUDO:=`which sudo 2>/dev/null`}

      $SUDO ln -s "$link" "$bc/bash_completion.d/"
    done
unset link

#curl -s 'http://169.254.169.254/' && {
#METADATA_URL='http://169.254.169.254/'
#declare -A ec2_metadata=()
#latest/meta-data/placement/availability-zone
#ami-id
#hostname
#instance-id
#instance-type
#local-ipv4
#public-ipv4
#}

function aws-profile {
  # NOTE: 'get *' does NOT follow source_profile nor fall-thru to 'default'.

  # set AWS_CONFIG_FILE and AWS_SHARED_CREDENTIALS_FILE to influence AWS Tools
  local readonly _cmd="aws configure get region"
  local readonly _profile="${1:?}"
  local _region _creds

  [ "$_profile" = 'RESET' ] && { aws-rmPath; unset ${!AWS_*}; return; }

  _region=`AWS_CONFIG_FILE=$AWS_CONFIG_FILE $_cmd --profile "$_profile" 2>/dev/null`
  [ $? -eq 255 ] && {
        log_ERROR "unknown profile ($_profile)${AWS_CONFIG_FILE:+ in $AWS_CONFIG_FILE}"
        return 255
    }

  aws-rmPath

  [ -n "$AWS_CONFIG_FILE" ] && _creds="${AWS_CONFIG_FILE%/*}/credentials"
  [ -f "$_creds" ] && AWS_SHARED_CREDENTIALS_FILE="$_creds"

  AWS_PROFILE="$_profile"
  [ -n "$_region" -o -n "$AWS_DEFAULT_REGION" ] || log_WARN "Region not set"
  aws-addPath

  export ${!AWS_*}
}


function aws-addPath {
  local v f delete

  for v in "$@" ${AWS_CONFIG_FILE:+`dirname "$AWS_CONFIG_FILE"`} \
        "$HOME"/.{aws,ssh}/"${AWS_PROFILE:-default}"; do
    [ -n "$v" -a -d "$v" ] || continue
    [ "$v" = '.' ] && v=`pwd`

    [ -n "$delete" ] && rmPath 'PATH' "$v"{/bin,} || addPath 'PATH' -"$v"/{,${AWS_PROFILE:-default}/}bin

    if [ -n "$SSH_AUTH_SOCK" ]; then
      for f in "$v"/{${AWS_PROFILE:-default}/,}{id_*,*.pem,*.pub}; do
        ${DEBUG:+ runv} ssh-add ${delete:+ -d} "$f" &>/dev/null
      done
      ${VERBOSE:+ echo; ssh-add -l}
    fi
    break
  done
}


function aws-rmPath {
  delete=1 aws-addPath "$@"
}


function route53-export {
  local zoneid=${1:?}

  grep -qE '([A-Z]|[0-9]){12,}' <<< "$zoneid" ||
    zoneid=$( aws route53 list-hosted-zones --output=json |
        jq -r ".HostedZones[] | select(.Name == \"$1\".) | .Id" |
        cut -d'/' -f3
    )

  for zone in $zoneid; do
    echo -e "; $zone\n"

    #TODO use printf() with width
    aws route53 list-resource-record-sets --hosted-zone-id=${zone:?} --output=json |
        jq -jr '.ResourceRecordSets[] | "\(.Name) \t\(.TTL) \t\(.Type) \t\(.ResourceRecords[].Value)\n"'
    echo -e "\n"
  done
}

# vim: expandtab:ts=4:sw=2
