#----- header -----
[ "${0##*/}" != "${BASH_SOURCE##*/}" ] || { >&2 echo -e "ERROR\tfile must be sourced ($0)"; return 2; }

# prevent multiple-inclusion
__link=`readlink -f "$BASH_SOURCE"`
declare -n __tag=SOURCE_${__link//[^a-zA-Z0-9_]/}
[ ${__tag:-0} = 0 ] || return 0
__tag=1
#------------------


: ${OSTYPE:=`uname | cut -d _ -f 1 | tr '[:upper:]' '[:lower:]'`}

is_exec pidof ||
function pidof() {
  \ps -o pid,cmd | awk -v pat="$1" '$NF ~ pat { print $1 }'
}

__uname=`uname`  # alt: uname|sed -E 's/(-[0-9.]+)+$//'
for f in "${BASH_SOURCE/bashrc/functions}" "${BASH_SOURCE}".{${__uname%%-*},$OSTYPE}; do
  [ -f "$f" ] || continue
  #NOTE - Mingw/MSYS don't support symlinks! The resulting file has just
  # a sigle line in it with the link target, which when sourced'd tries to
  # execute the file, which is an error.
  source "$f" || echo >&2 "RC=$? during $f"
done


#TODO
#os.detect

# vim: expandtab:ts=4:sw=4
