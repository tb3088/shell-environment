#----- header -----
[ "${0##*/}" != "${BASH_SOURCE##*/}" ] || { >&2 echo -e "ERROR\tfile must be sourced ($0)"; return 2; }

# prevent multiple-inclusion
__link=`readlink -f "$BASH_SOURCE"`
declare -n __tag=SOURCE_${__link//[^a-zA-Z0-9_]/}
[ ${__tag:-0} = 0 ] || return 0
__tag=1
#------------------


PATHSEP=';'
readonly PATHSEP

is_exec sudo ||
function sudo() {
  local who cmd line env shell flags preserve=
  #FIXME local -A env
  #FIXME local -a flags and cmd?
  local OPTIND opt      # important!!

  while getopts ':ieEu:X' opt 2>/dev/null; do
    case "$opt" in
      i)    initial=1; unset preserve
	    ;;
      e)    cmd=`VERBOSE=1; is_exec ${EDITOR:-vi}` || {
                log.error "invalid EDITOR (${EDITOR:-vi})"
                return
              }
            ;;
      E)    preserve='' ;;
      u)    who=$OPTARG ;;
      X)    exec=1 ;;
      :)    log.error "missing argument to '-$OPTARG'"; return 2 ;;
      \?)   flags+=" -$OPTARG"
    esac
  done
  shift $((OPTIND-1))

  : ${who:?missing argument \'-u USER\'}
  line=`getent passwd $who || \grep -s "^${who}:" /etc/passwd` || {
        log.error "unknown USER ($who)"
        return
    }

  env=`awk -F: '{ printf("USER=%s USERNAME=%s HOME=%s UID=%s", $1, $1, $(NF-1), $3) }' <<< "$line"`
  # preserve certain values regardless
  for e in USERPROFILE ALLUSERSPROFILE TERM; do
    [ -n "${!e}" ] && env+=" $e='${!e}'"
  done

  shell=${line##*:}
  [ -n "${shell:=$SHELL}" -a -x "$shell" ] || {
        log.error "invalid SHELL ($shell)"
        return
    }

  ${DEBUG:+ runv} ${exec:+ exec} env ${preserve- -i} $env ${cmd:-$shell ${initial:+ -l}} $flags "$@"
}
readonly -f sudo


# vim: expandtab:ts=4:sw=4
