
which go &>/dev/null || {
    # look for program in common places
    declare -n v
    for v in GOROOT SYSTEMDRIVE PROGRAMFILES LOCALAPPDATA; do
        [ -n "$v" ] || continue
        for p in go{,lang}${GO_VERSION:+-$GO_VERSION}; do
#            p="`cygpath -- $v`/$p"
            [ -x "$p/bin/go" ] && { addPath "$p/bin"; break; }
        done
    done
    unset -n v
    which go &>/dev/null || return 0
}

#https://golang.org/cmd/go/#hdr-GOPATH_environment_variable
: ${GOROOT:=`go env GOROOT`}

[ -d "${GOPATH:=`go env GOPATH`}" ] || {
    # Windows:  %USERPROFILE%/go
    # Unix:     $HOME/go
    mkdir -p "$GOPATH"

    # Personally I prefer %LOCALAPPDATA%/go and $HOME/.go
# if `is_windows go` then mkdir "$LOCALAPPDATA/go" and GOPATH=`convert_path -t windows ...`
# else mkdir $HOME/.go and GOPATH=$HOME/.go; 
  }

# walk elements of GOPATH and add to $PATH
#IFS="${PATHSEP:-:}"
#for v in GOPATH; do
#    [ -d "$v/bin" ] && addPath "$v/bin"
#done
unset IFS

#TODO Windows 'go get' doesn't work if using Cygwin 'git'
# if OSTYPE=cygwin or uname -k = windows, then git version | grep windows or issue WARN

export ${!GO*}

# vim: expandtab:ts=4:sw=4
