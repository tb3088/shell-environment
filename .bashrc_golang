return 0    # disabled

is_exec go || {
    # look for program in common places
    declare -n v

    for v in GOROOT SYSTEMDRIVE PROGRAMFILES LOCALAPPDATA; do
        [ -n "$v" ] || continue
        for p in `convert_path "$v"`/go{,lang}{,{,-,_}$GO_VERSION}; do
            [ -x "$p/bin/go" ] && { addPath "$p/bin"; break; }
        done
    done
    unset -n v
  }

#FIXME detect if Windows binary. if so, we can't mangle paths into UNIX-style
#https://golang.org/cmd/go/#hdr-GOPATH_environment_variable
: ${GOROOT:=`go env GOROOT`}

# Windows:  %USERPROFILE%/go
# Unix:     $HOME/go
# Personally I prefer %LOCALAPPDATA%/go and $HOME/.go

IFS=':' read -a items < <(convert_path `go env GOPATH`)
for d in "${items[@]}"; do 
    mkdir -p "$d"
done
# if `is_windows go` then mkdir "$LOCALAPPDATA/go" and GOPATH=`convert_path -t windows -E ...`

# walk elements of GOPATH and add to $PATH
# cygpath -p $GOPATH
#IFS="${PATHSEP:?}"
#for v in GOPATH; do
#    [ -d "$v/bin" ] && addPath "$v/bin"
#done
#unset IFS

#TODO Windows 'go get' doesn't work if using Cygwin 'git'
# if OSTYPE=cygwin or uname -k = windows, then git version | grep windows or issue WARN

export ${!GO*}

# vim: expandtab:ts=4:sw=4
