#----- header -----
[ "${0##*/}" != "${BASH_SOURCE##*/}" ] || { >&2 echo -e "ERROR\tfile must be sourced ($0)"; return 2; }
#------------------

return 0    # disabled

# ${GOROOT:-'go{,lang}{-,}'$GO_VERSION
source ${BASH_SOURCE%_*}/_3rdparty go

#FIXME detect if Windows binary. if so, we can't mangle paths into UNIX-style
#https://golang.org/cmd/go/#hdr-GOPATH_environment_variable
: ${GOROOT:=`go env GOROOT`}

# Windows:  %USERPROFILE%/go
# Unix:     $HOME/go
# Personally I prefer %LOCALAPPDATA%/go and $HOME/.go

IFS=':' read -a items < <(convert_path `go env GOPATH`)
for d in "${items[@]}"; do
    mkdir -p "$d"
done
# if `is_windows go` then mkdir "$LOCALAPPDATA/go" and GOPATH=`convert_path -t windows -E ...`

# walk elements of GOPATH and add to $PATH
# cygpath -p $GOPATH
#IFS="${PATHSEP:?}"
#for v in GOPATH; do
#    addPath "$v/bin"
#done
#unset IFS

#TODO Windows 'go get' doesn't work if using Cygwin 'git'
# if OSTYPE=cygwin or uname -k = windows, then git version | grep windows or issue WARN
#[[ "${OSTYPE:-`uname -o`}" = [cC]ygwin ]]

export ${!GO*}

# vim: expandtab:ts=4:sw=4
