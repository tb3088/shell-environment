#----- header -----
[ "${0##*/}" != "${BASH_SOURCE##*/}" ] || { >&2 echo -e "ERROR\tfile must be sourced ($0)"; return 2; }

# short-circuit inside screen or sub-shell
[ -z "$STY" -a ${SHLVL:-1} -eq 1 ] || return 0
#------------------

# MUST allow multiple invocation, always return '0'
#
# Usage:
#   1) symlink: .bashrc_mvn -> .bashrc_3rdparty
#   2) args: .bashrc_3rdparty mvn java ...

function 3rdparty.add_program() {
  local pkg=${1:?package name}
  [ -x "$pkg" ] && return

  # search spec
  declare -A software_map=(
      ['aws']=${AWSCLI:-aws'{cli,}{v,}'$AWS_VERSION}
      ['session-manager-plugin']=\${AWS_SM_PLUGIN:?}
      ['mvn']=apache-maven
      ['npm']=nodejs
      ['java']=${JAVA_HOME:-'j{re,dk,se}{-,}'$JAVA_VERSION}
      ['puppet']=${PUPPET_BASE:-puppetlabs}
      ['go']=${GOROOT:-'go{,lang}{-,}'$GO_VERSION}
      ['ruby']=${RUBY_BASE:-'ruby{-,}'$RUBY_VERSION}
    )

  local exp
  exp=${software_map[$pkg]} 2>/dev/null || {
      log.error "unsupported software package ($pkg)"; return; }

  if [[ "$exp" =~ {*} ]]; then exp=( `convert_path -E $(eval echo "$exp")` )
  else exp=`convert_path -E "$exp"`; fi

  #TODO https://unix.stackexchange.com/questions/406216/check-for-bash-options
  local pbin
  pbin=$(
      # process embedded glob patterns
      shopt -u failglob
      shopt -s globstar nullglob

      # WARN '/**/' can be VERY slow
      while read tld; do
        for mid in "${exp[@]}"; do
          for exe in "${tld:+$tld/}${mid#$tld}"*/{bin/,}$pkg; do
            [ -x "$exe" ] && { echo "$exe"; return; }   #found=1; break 3; }
          done
        done
      done < <(
          printf '%s\n' '' /opt /usr/local
          for i in "${USERPROFILE:-$HOME}" "$LOCALAPPDATA" "$PROGRAMFILES"; do
            [ -n "$i" ] || continue
            convert_path "$i"
          done
        )
    )

  if [ -n "$pbin" ]; then addPath "${pbin%/*}"
  else log.warn "software package not found ($pkg)"; fi
}

# multiple arguments supported, but not recommend
while (( $# )); do
  [ -n "$1" ] || { shift; continue; }

  3rdparty.add_program "$1"
  shift
done

j=`readlink -e "$BASH_SOURCE"`
k=${BASH_SOURCE#*.bashrc_}
[ "${j#*.bashrc_}" = "$k" ] || 3rdparty.add_program "$k"
unset j k

return 0


# vim: expandtab:ts=4:sw=4
