#----- header -----
[ "${0##*/}" != "${BASH_SOURCE##*/}" ] || { >&2 echo -e "ERROR\tfile must be sourced ($0)"; return 2; }

# short-circuit inside screen or sub-shell
[ -z "$STY" -a ${SHLVL:-1} -eq 1 ] || return 0
#------------------

# MUST allow multiple invocation, always return '0'
#
# Usage:
#   1) symlink: .bashrc_mvn -> .bashrc_3rdparty
#   2) args: .bashrc_3rdparty mvn java ...


declare -A __3rdparty_map=(
    ['aws']=${AWSCLI:-'aws{cli,}{v,}'$AWS_VERSION}
    ['mvn']=apache-maven
    ['java']=${JAVA_HOME:-'j{re,dk,se}{-,}'$JAVA_VERSION}
    ['puppet']=${PUPPET_BASE:-puppetlabs}
    ['go']=${GOROOT:-'go{,lang}{-,}'$GO_VERSION}
    ['ruby']=${RUBY_BASE:-'ruby{-,}'$RUBY_VERSION}
  )

function add_program() {
  is_exec -q "${1:?}" && return

  local m=${__3rdparty_map[$1]}
  [ -n "$m" ] || { log.error "unsupported software package ($1)"; return; }

  if [ "${m:0:1}" = '/' ]; then
    for p in "$m"/{bin,}; do
      [ -x "$p/$1" ] && { addPath "$p"; break; }
    done
    return
  fi

  #TODO https://unix.stackexchange.com/questions/406216/check-for-bash-options
  local pbin
  pbin=$(
      shopt -u failglob
      shopt -s globstar

      # process embedded glob patterns
      for v in `eval echo "$m"`; do
        # WARN '/**/' can be VERY slow
        for p in {/opt,/usr/local,"$PROGRAMFILES","$LOCALAPPDATA"}/${v}*/**/{bin,}; do
          [ -x "$p/$1" ] && { echo "$p"; break 2; }
        done
      done
    )

  [ -n "$pbin" ] && addPath "$pbin" || log.notice "software package not found ($1)"
}


j=`readlink -e "$BASH_SOURCE"`
k=${BASH_SOURCE#*.bashrc_}
[ "${j#*.bashrc_}" = "$k" ] || add_program "$k"
unset j k

# multiple arguments supported, but not recommend
while (( $# )); do
  [ -n "$1" ] || { shift; continue; }
  add_program "$1"
  shift
done

return 0


# vim: expandtab:ts=4:sw=4
